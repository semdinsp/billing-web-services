# $Id: finance.rb,v 1.8 2006/04/08 13:05:43 ianmacd Exp $
# 
# Author  : Scott Sproule scott.sproule@gmail.com
#
# Copyright (C) 2004-2006 Scott Sproule

require 'uri'
#require 'xsd/qname'
require 'soap/wsdlDriver'


module BillingWebService
 module Argon
   VERSION = '0.0.1'
   # WSDLtest	  = 'http://svbilling:9999/cureWS/services?wsdl'   #testing 9999  #production=8888
  # WSDLprod	  = 'http://svbilling:8888/cureWS/services?wsdl'   #testing 9999  #production=8888
   # ip address to remove dns  10.43.31.137
    WSDLtest	  = 'http://10.43.31.137:9999/cureWS/services?wsdl'   #testing 9999  #production=8888
    WSDLprod	  = 'http://10.43.31.137:8888/cureWS/services?wsdl'   #testing 9999  #production=8888
   # {http://ws.argon.seer.com}updateAccountCreditLimit
   # {http://ws.argon.seer.com}updateAccountCreditLimit
   # {http://ws.argon.seer.com}updateAccountCreditLimit
   class UpdateAccountCreditLimit
     attr_accessor :in0
     attr_accessor :in1
     attr_accessor :in2

     def initialize(in0 = nil, in1 = nil, in2 = nil)
       @in0 = in0
       @in1 = in1
       @in2 = in2
     end
   end

   # {http://ws.argon.seer.com}updateAccountCreditLimitResponse
   class UpdateAccountCreditLimitResponse
     attr_accessor :out

     def initialize(out = nil)
       @out = out
     end
   end
   # {http://ws.argon.seer.com}getAccountNumber
   class GetAccountNumber
     attr_accessor :in0

     def initialize(in0 = nil)
       @in0 = in0
     end
   end

   # {http://ws.argon.seer.com}getAccountNumberResponse
   class GetAccountNumberResponse
     attr_accessor :out

     def initialize(out = nil)
       @out = out
     end
   end

   # {http://ws.argon.seer.com}getAccountDetails
   class GetAccountDetails
     attr_accessor :in0

     def initialize(in0 = nil)
       @in0 = in0
     end
   end
   # {http://ws.argon.seer.com}getAccountDetailsResponse
   class GetAccountDetailsResponse
     attr_accessor :out

     def initialize(out = nil)
       @out = out
     end
   end

   # {http://ws.argon.seer.com}topup
   class Topup
     attr_accessor :in0
     attr_accessor :in1
     attr_accessor :in2

     def initialize(in0 = nil, in1 = nil, in2 = nil)
       @in0 = in0
       @in1 = in1
       @in2 = in2
     end
   end
   
   # {http://ws.argon.seer.com}topup
    class DebitAccount
      attr_accessor :in0
      attr_accessor :in1
      attr_accessor :in2

      def initialize(in0 = nil, in1 = nil, in2 = nil)
        @in0 = in0
        @in1 = in1
        @in2 = in2
      end
    end

  
   # {http://ws.argon.seer.com}topupResponse
   class TopupResponse
     attr_accessor :out

     def initialize(out = nil)
       @out = out
     end
   end
    class DebitAccountResponse
      attr_accessor :out

      def initialize(out = nil)
        @out = out
      end
    end

   # {http://dto.components.argon.seer.com}AcknowledgementDTO
   class AcknowledgementDTO
     attr_accessor :accountNumber
     attr_accessor :remarks
     attr_accessor :successful

     def initialize(accountNumber = nil, remarks = nil, successful = nil)
       @accountNumber = accountNumber
       @remarks = remarks
       @successful = successful
     end
   end

   # {http://dto.components.argon.seer.com}AccountDTO
   class AccountDTO
     attr_accessor :vTigerID
     attr_accessor :accountNumber
      attr_accessor :balance
       attr_accessor :creditLimit
       attr_accessor :currentUsage
       attr_accessor :imsi
       attr_accessor :msisdn
       attr_accessor :productName
       attr_accessor :remarks
       attr_accessor :status

       def initialize(vTigerID = nil, accountNumber = nil, balance = nil, creditLimit = nil, currentUsage = nil, imsi = nil, msisdn = nil, productName = nil, remarks = nil, status = nil)
         @vTigerID = vTigerID
         @accountNumber = accountNumber
         @balance = balance
         @creditLimit = creditLimit
         @currentUsage = currentUsage
         @imsi = imsi
         @msisdn = msisdn
         @productName = productName
         @remarks = remarks
         @status = status
       end
     end

  
  class ArgonWebServiceClient
    @@soap=nil
    def initialize(wsdl= WSDLprod )
      temp = SOAP::WSDLDriverFactory.new(wsdl)
      @@soap = temp.create_rpc_driver if @@soap==nil
  #     @@soap = SOAP::WSDLDriverFactory.new(wsdl).create_rpc_driver unless defined? @@soap  
      
    end
    #show the http requests... call this before making call
    def debug_wire
        @@soap.wiredump_dev = STDERR 
    end
    def get_soap
      @@soap
    end
     def top_up(account_number,top_up_amount,user_name)
        tu=Topup.new(account_number,top_up_amount,user_name)
        r = @@soap.topup(tu)
        resp=r.out    #resp.successful string, resp.remarks, resp.accountNumber
        # raise "bad AccountNumber" if resp.accountNumber != account_number
         return r.out.successful == "true"
      end
       def debit_account(account_number,debit_amount,user_name)
          da=DebitAccount.new(account_number,debit_amount,user_name)
          r = @@soap.debitAccount(da)
          resp=r.out    #resp.successful string, resp.remarks, resp.accountNumber
          # raise "bad AccountNumber" if resp.accountNumber != account_number
           return r.out.successful == "true"
        end
        def get_account_details(account_number)
            ad=GetAccountDetails.new(account_number)
            r = @@soap.getAccountDetails(ad)
            
            resp=r.out  
              #resp.successful string, resp.remarks, resp.accountNumber
            # raise "bad AccountNumber" if resp.accountNumber != account_number
             return r.out
          end
        def change_credit_limit(account_number,credit_limit,user_name)
            cl=UpdateAccountCreditLimit.new(account_number,credit_limit,user_name)
            r = @@soap.updateAccountCreditLimit(cl)
            resp=r.out    #resp.successful string, resp.remarks, resp.accountNumber
            # raise "bad AccountNumber" if resp.accountNumber != account_number
             return r.out.successful == "true"
          end
    def getAccountNumber(msisdn)
      ga=GetAccountNumber.new(msisdn)
      r = @@soap.getAccountNumber(ga)
      #puts "SCOTT r.out #{r.out.to_s}"
     #   r.out if r.class == GetAccountNumberResponse
      #puts "r.out is #{r.out}"
      r.out if r.out.class == String
    end
  end
  end  
 end
